'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

exports.containsPromise = containsPromise;
exports.isPromise = isPromise;
exports.after = after;
exports.afterReturn = afterReturn;
exports.afterAllReturn = afterAllReturn;
exports.mapAfterAllReturn = mapAfterAllReturn;

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function containsPromise(arr) {
  for (var i = 0, l = arr.length; i < l; ++i) {
    if (isPromise(arr[i])) {
      return true;
    }
  }

  return false;
}

function isPromise(obj) {
  return obj && (typeof obj === 'undefined' ? 'undefined' : (0, _typeof3.default)(obj)) === 'object' && typeof obj.then === 'function';
}

function after(obj, func) {
  if (isPromise(obj)) {
    return obj.then(func);
  } else {
    return func(obj);
  }
}

function afterReturn(obj, returnValue) {
  if (isPromise(obj)) {
    return obj.return(returnValue);
  } else {
    return returnValue;
  }
}

function afterAllReturn(arr, value) {
  if (containsPromise(arr)) {
    return _bluebird2.default.all(arr).return(value);
  } else {
    return value;
  }
}

function mapAfterAllReturn(arr, mapper, returnValue) {
  var results = new Array(arr.length);
  var containsPromise = false;

  for (var i = 0, l = arr.length; i < l; ++i) {
    results[i] = mapper(arr[i]);

    if (isPromise(results[i])) {
      containsPromise = true;
    }
  }

  if (containsPromise) {
    return _bluebird2.default.all(results).return(returnValue);
  } else {
    return returnValue;
  }
}